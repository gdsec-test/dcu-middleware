version: 1

disable_existing_loggers: false:

formatters:
    simple:
        format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    detailed:
        format: '[%(levelname)s:%(asctime)s:%(filename)s:%(lineno)s - %(funcName)20s() ] %(message)s'
        datefmt:  '%Y-%m-%d %I:%M:%S%p'


handlers:
    console:
        class: logging.StreamHandler
        level: INFO
        formatter: detailed
        stream: ext://sys.stdout

    info_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: INFO
        formatter: detailed
        filename: info.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

    error_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: ERROR
        formatter: detailed
        filename: errors.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8


loggers:
    # define logging levels, and logging handlers for your modules here
    # each section should define a logging setup for a specific module in
    # your code. If you dont define any loggers, the root logger will process
    # the logging messages
    dcumiddleware:
        level: INFO
        handlers: [console, info_file_handler, error_file_handler]
        propagate: false

    celery.tasks:
        level: INFO
        handlers: [console, info_file_handler, error_file_handler]
        propagate: false

root:
    level: INFO
    handlers: [console, info_file_handler, error_file_handler]